给定一个 没有重复 数字的序列，返回其所有可能的全排列。

示例:

输入: [1,2,3]
输出:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/permutations
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

1.dfs回溯 自己实现：
class Solution {
    List<List<Integer>> res = new ArrayList();
    public List<List<Integer>> permute(int[] nums) {
        int len = nums.length;
        if(len==0){
            return res;
        }
        boolean[] used = new boolean[len];
        Deque<Integer> stack = new ArrayDeque<>(len);
        dfsHelper(nums,len,0,stack,used);
        return res;
    }
    void dfsHelper(int[] nums,int len, int depth,Deque<Integer> stack,boolean[] used){
        if(len == depth){
            res.add(new ArrayList(stack));
        }
        for(int i=0;i<len;i++){
            if(used[i]){
                continue;
            }
            stack.addLast(nums[i]);
            used[i] = true;
            dfsHelper(nums,len,depth+1,stack,used);
            stack.removeLast();
            used[i] = false;
        }
        return ;
    }
}

leetcode 题解：
https://leetcode-cn.com/problems/permutations/solution/hui-su-suan-fa-python-dai-ma-java-dai-ma-by-liweiw/