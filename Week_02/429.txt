给定一个 N 叉树，返回其节点值的层序遍历。 (即从左到右，逐层遍历)。

例如，给定一个 3叉树 :



返回其层序遍历:

[
     [1],
     [3,2,4],
     [5,6]
]


说明:

树的深度不会超过 1000。
树的节点总数不会超过 5000。




1.bfs
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null){
            return res;
        }
        Queue<Node> queue = new LinkedList<Node>();
        queue.offer(root);
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> list = new ArrayList<>();
            while(size>0){
                Node  node = queue.poll();
                list.add(node.val);
                for(Node child : node.children){
                    queue.offer(child);
                }
                size--;
            }
            res.add(list);
        }
        return res;
    }
}

递归（推荐）
class Solution {
    private List<List<Integer>> res = new ArrayList();
    public List<List<Integer>> levelOrder(Node root) {
        if(root!=null){
            nodeHelper(root,0);
        }
        return res;
    }
    void nodeHelper(Node root,int level){
        if(root == null){
            return ;
        }
        if(res.size() <= level){
            res.add(new ArrayList());
        }
        res.get(level).add(root.val);
        for(Node child : root.children){
            nodeHelper(child,level+1);
        }
    }
}
